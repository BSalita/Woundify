{
  "version": "0.0",
  "debugLevel": 3, // careful. level 3+ turns on preferred service so will double an api request
  "tempFolderPath": "",
  "logFilePath": "",
  "curlFilePath": "",
  "curlDefaults": "curl", // e.g. curl -x 127.0.0.1:8888 -k -v -i -L --libcurl <filename>.curl
  "pauseSecondsDefault": 2.0,
  "audio": {
    "transCodeFileName": "TransCode.wav",
    "speechSynthesisFileName": "SynSpeech.wav",
    "bitDepth": 16,
    "channels": 1,
    "samplingRate": 16000,
    "NAudio": {
      "desiredLatencyMilliseconds": 100,
      "inputDeviceNumber": 0,
      "waveInBufferMilliseconds": 100
    }
  },
  "commands": [
    {
      "key": "End",
      "name": "End",
      "help": "End execution."
    },
    {
      "key": "Annotate",
      "name": "Annotate",
      "help": "Annotate the text.",
      "commandService": "AnnotateService"
    },
    {
      "key": "Entities",
      "name": "Entities",
      "help": "Analyze proper nouns within text.",
      "commandService": "EntitiesService"
    },
    {
      "key": "Help",
      "name": "Help",
      "help": "Show commands and options."
    },
    {
      "key": "Identify",
      "name": "Identify",
      "help": "Identify language of text.",
      "commandService": "IdentifyLanguageService"
    },
    {
      "key": "Intent",
      "name": "Intent",
      "help": "Intent of text.",
      "commandService": "IntentService"
    },
    {
      "key": "Personality",
      "name": "Personality",
      "help": "Personality of text.",
      "commandService": "PersonalityService"
    },
    {
      "key": "Paraphrase",
      "name": "Paraphrase",
      "help": "[Deprecated] Paraphrase a sentence.",
      "commandService": "ParaphraseService"
    },
    {
      "key": "Parse",
      "name": "Parse",
      "help": "Parse text.",
      "commandService": "ParseService"
    },
    {
      "key": "SpeechToText",
      "name": "Speech",
      "help": "Speech to text.",
      "commandService": "SpeechToTextService"
    },
    {
      "key": "Spell",
      "name": "Spell",
      "help": "Spell check text.",
      "commandService": "SpellService"
    },
    {
      "key": "TextToSpeech",
      "name": "Text",
      "help": "Capture as text.",
      "commandService": "TextToSpeechService"
    },
    {
      "key": "Tone",
      "name": "Tone",
      "help": "Tone of text.",
      "commandService": "ToneService"
    },
    {
      "key": "Translate",
      "name": "Translate",
      "help": "Translation of text.",
      "commandService": "TranslateService",
      "source": "en", // from
      "target": "es" // to
    }
  ],
  "commandServices": [
    {
      "key": "Annotate",
      "name": "AnnotateService",
      "preferredServices": [
        "GoogleCloudAnnotateTextService"
      ]
    },
    {
      "key": "Entities",
      "name": "EntitiesService",
      "preferredServices": [
        "GoogleCloudAnalyzeEntitiesService"
      ]
    },
    {
      "key": "Identify",
      "name": "IdentifyLanguageService",
      "preferredServices": [
        "BingDetectLanguageService",
        "GoogleCloudDetectLanguageService",
        "IbmWatsonIdentifyLanguageService"
      ]
    },
    {
      "key": "Intent",
      "name": "IntentService",
      "preferredServices": [
        "HoundifyIntentAudioService",
        "HoundifyIntentTextService"
      ]
    },
    {
      "key": "Paraphrase",
      "name": "ParaphraseService",
      "preferredServices": [
      // no Paraphrase service available. Microsoft Paraphrase API has been withdrawn.
      ]
    },
    {
      "key": "Parse",
      "name": "ParseService",
      "preferredServices": [
        "BingParseService"
      ]
    },
    {
      "key": "Personality",
      "name": "PersonalityService",
      "preferredServices": [
        "IbmWatsonPersonalityService"
      ]
    },
    {
      "key": "SpeechToText",
      "name": "SpeechToTextService",
      "preferredServices": [
        "GoogleCloudSpeechToTextService",
        "BingSpeechToTextService",
        //"GoogleSpeechToTextService",
        "HoundifySpeechToTextService",
        "HpeHavenSpeechToTextService",
        "IbmWatsonSpeechToTextService",
        "WindowsSpeechToTextService",
        "WitSpeechToTextService"
      ]
    },
    {
      "key": "Spell",
      "name": "SpellService",
      "preferredServices": [
        "BingSpellService"
      ]
    },
    {
      "key": "TextToSpeech",
      "name": "TextToSpeechService",
      "preferredServices": [
        "WindowsTextToSpeechService",
        "IbmWatsonTextToSpeechService"
      ],
      "voiceAge": 0,
      "voiceGender": 0,
      "sampleRate": 16000 // move bitDepth, channels from "Audio" to here? or just use "Audio" settings?
    },
    {
      "key": "Tone",
      "name": "ToneService",
      "preferredServices": [
        "IbmWatsonToneService",
        "BingSentimentService",
        "GoogleCloudAnalyzeSentimentService"
      ]
    },
    {
      "key": "Translate",
      "name": "TranslateService",
      "preferredServices": [
        "GoogleCloudTranslateService",
        "IbmWatsonTranslateService",
        "BingTranslateService"
      ]
    }
  ],
  "geolocaton": {
    "longitude": -121.97394,
    "latitude": 37.388057,
    "accuracyInMeters": 50,
    "town": "Santa Clara",
    "region": "california",
    "regionCode": "CA",
    "country": "United States",
    "countryCode": "US"
  },
  "locale": {
    "language": "en-US"
  },
  "wakeup": {
    "confidence": 0.80,
    "endSilenceTimeout": 3.0,
    "initialSilenceTimeout": -1,
    "listenTimeOut": 8.0,
    "preferLoopUntilWakeUpWordFound": false,
    "words": [
      "computer"
    ]
  },
  "APIs": {
    "preferSystemNet": false,
    "preferChunkedEncodedRequests": false
  },
  "services": [
    {
      "name": "BingDetectLanguageService",
      "classInterface": "BingServices.IIdentifyLanguageService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "westus.api.cognitive.microsoft.com",
          "path": "text/analytics/v2.0/languages",
          "query": "numberOfLanguagesToDetect=1"
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          },
          {
            "Name": "OcpApimSubscriptionKey",
            "OcpApimSubscriptionKey": ""
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'documents': [ { 'id': '{guid}', 'text': '{text}' } ] }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "documents[0].detectedLanguages[0].name"
      }
    },
    {
      "name": "BingParaphraseService",
      "classInterface": "BingServices.IParaphraseService",
      "request": {
        "method": "get", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.microsofttranslator.com",
          "path": "v3/json/paraphrase",
          "query": "sentence={text}&language={language}&category={catagory}&maxParaphrases={maxParaphrases}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "clientID": "Hackathon",
              "clientSecret": "vrbE92fuvXfFLFcjxOoxg/3Y1adVc8nF1Zmc39LDw2c="
            }
          }
        ]
        // no "data" property for GET methods
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "BingParseAnalyzersService",
      "classInterface": "BingServices.IParseAnalyzersService",
      "request": {
        "method": "get", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.projectoxford.ai",
          "path": "linguistics/v1.0/analyzers"
          //"query": ""
        },
        "headers": [
          {
            "Name": "OcpApimSubscriptionKey",
            "OcpApimSubscriptionKey": ""
          }
        ]
        // no "data" property for GET methods
      },
      "response": {
        "missingResponse": "whatever"
        // TODO: implement jsonPath instead of hardcoding within service
      }
    },
    {
      "name": "BingParseService",
      "classInterface": "BingServices.IParseService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.projectoxford.ai",
          "path": "linguistics/v1.0/analyze"
          //"query": ""
        },
        "headers": [
          {
            "Name": "Accept",
            "Accept": "application/json"
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          },
          {
            "Name": "OcpApimSubscriptionKey",
            "OcpApimSubscriptionKey": ""
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{'language' : 'en', 'analyzerIds' : [{AnalyzerStringized}], 'text' :'{text}'}"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "[1].result"
      }
    },
    {
      "name": "BingSentimentService",
      "classInterface": "BingServices.IToneService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "westus.api.cognitive.microsoft.com",
          "path": "text/analytics/v2.0/sentiment"
          //"query": ""
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          },
          {
            "Name": "OcpApimSubscriptionKey",
            "OcpApimSubscriptionKey": ""
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'documents': [ { 'id': '{guid}', 'text': '{text}' } ] }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "BingSpeechToTextService",
      "classInterface": "BingServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "speech.platform.bing.com",
          "path": "recognize",
          "query": "scenarios=smd&appid=D4D52672-91D7-4C74-8AD8-42B1D98141A5&locale={locale}&device.os=wp7&version=3.0&format=json&instanceid=565D69FF-E928-4B7E-87DA-9A750B96D9E3&requestid={guid}"
        },
        "headers": [
          {
            "Name": "Accept",
            "Accept": "application/json"
          },
          {
            "Name": "BearerAuthentication",
            "OcpApimSubscriptionKey": "",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "uri": "https://api.cognitive.microsoft.com/sts/v1.0/issueToken"
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "audio/wav; codec=\"audio/pcm\"; samplerate={sampleRate}"
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "header.name"
      }
    },
    {
      "name": "BingSpellService",
      "classInterface": "BingServices.ISpellService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.cognitive.microsoft.com",
          "path": "bing/v5.0/spellcheck",
          "query": "mode=proof&mkt=en-US" // must have mkt=en-US for use outside of US
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "application/x-www-form-urlencoded"
          },
          {
            "Name": "OcpApimSubscriptionKey",
            "OcpApimSubscriptionKey": ""
          }
        ],
        "data": {
          "type": "urlencode", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "Text={text}" // urlencode name=content
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "BingTranslateService",
      "classInterface": "BingServices.ITranslateService",
      "request": {
        "method": "get", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.microsofttranslator.com",
          "path": "v2/Http.svc/Translate",
          "query": "Text={text}&From={source}&To={target}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "clientID": "",
              "clientSecret": "",
              "scope": "http://api.microsofttranslator.com",
              "uri": "https://datamarket.accesscontrol.windows.net/v2/OAuth2-13",
              "grant": "grant_type=client_credentials&client_id={clientID}&client_secret={clientSecret}&scope={scope}"
            }
          }
        ]
        // no "data" property for GET methods
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "GoogleCloudAnalyzeEntitiesService",
      "classInterface": "GoogleCloudServices.IEntitiesService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "language.googleapis.com",
          "path": "v1/documents:analyzeEntities",
          "query": "key={key}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'document': { 'type':'PLAIN_TEXT', 'content':'{text}' } }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "entities[*].name"
      }
    },
    {
      "name": "GoogleCloudAnalyzeSentimentService",
      "classInterface": "GoogleCloudServices.IToneService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "language.googleapis.com",
          "path": "v1/documents:analyzeSentiment",
          "query": "key={key}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'document':{ 'type':'PLAIN_TEXT', 'content':'{text}' } }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "GoogleCloudAnnotateTextService",
      "classInterface": "GoogleCloudServices.IAnnotateService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "language.googleapis.com",
          "path": "v1/documents:annotateText",
          "query": "key={key}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'document':{ 'type':'PLAIN_TEXT', 'content':'{text}' }, 'features': { 'extract_sentences': true, 'extract_tokens': true, 'extract_entities': true, 'extract_document_sentiment': true } }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "GoogleCloudDetectLanguageService",
      "classInterface": "GoogleCloudServices.IIdentifyLanguageService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "translation.googleapis.com",
          "path": "language/translate/v2/detect",
          "query": "key={key}&q={text}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ 'document': { 'type':'PLAIN_TEXT', 'content':'{text}' } }"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "data.detections[0][0].language"
      }
    },
    {
      "name": "GoogleCloudSpeechToTextService",
      "classInterface": "GoogleCloudServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "speech.googleapis.com",
          "path": "v1beta1/speech:syncrecognize",
          "query": "key={key}"
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          },
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          }
        ],
        "data": {
          "type": "base64", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{'config':{'encoding':'LINEAR16','sampleRate':16000,'languageCode':'en-US'},'audio':{'content':'{text}'}}"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "results[0].alternatives[0].transcript"
      }
    },
    {
      "name": "GoogleCloudTranslateService",
      "classInterface": "GoogleCloudServices.ITranslateService",
      "request": {
        "method": "get", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "www.googleapis.com",
          "path": "language/translate/v2",
          "query": "key={key}&q={text}&source={source}&target={target}"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": ""
            }
          }
        ]
        // no "data" property for GET methods
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "data.translations[0].translatedText"
      }
    },
    {
      "name": "GoogleSpeechToTextService",
      "classInterface": "GoogleServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "www.google.com",
          "path": "speech-api/v2/recognize",
          "query": "output=json&lang={language}&key={key}"
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "audio/l16; rate={sampleRate.ToString()}"
          },
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "key": "AIzaSyCcjMGqIoJtd3hskrRbJBZHLaxI4XE1IxI"
            }
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "HoundifyIntentAudioService",
      "classInterface": "HoundifyServices.IIntentService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.houndify.com",
          "path": "v1/audio"
        },
        "headers": [
          {
            "Name": "HoundifyAuthentication",
            "HoundifyAuthentication": {
              "ClientID": "",
              "ClientKey": "",
              "UserID": ""
            }
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "PartialTranscriptsDesired": false,
        "jsonPath": "AllResults[0].SpokenResponse"
      }
    },
    {
      "name": "HoundifyIntentTextService",
      "classInterface": "HoundifyServices.IIntentService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.houndify.com",
          "path": "v1/text",
          "query": "query={text}"
        },
        "headers": [
          {
            "Name": "HoundifyAuthentication",
            "HoundifyAuthentication": {
              "ClientID": "",
              "ClientKey": "",
              "UserID": ""
            }
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "PartialTranscriptsDesired": false,
        "jsonPath": "AllResults[0].SpokenResponse"
      }
    },
    {
      "name": "HoundifySpeechToTextService",
      "classInterface": "HoundifyServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.houndify.com",
          "path": "v1/audio"
        },
        "headers": [
          {
            "Name": "HoundifyAuthentication",
            "HoundifyAuthentication": {
              "ClientID": "",
              "ClientKey": "",
              "UserID": ""
            }
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "AllResults[0].SpokenResponse"
      }
    },
    {
      "name": "HpeHavenSpeechToTextService",
      "classInterface": "HpeHavenServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.havenondemand.com",
          "path": "1/api/async/recognizespeech/v1"
        },
        "data": {
          "type": "urlencode", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "file={text}&apikey=222693c9-6449-470f-a611-2d4433980dc1&language=en-US&interval=-1"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "actions[0].result.document[0].content"
      }
    },
    {
      "name": "IbmWatsonIdentifyLanguageService",
      "classInterface": "IbmWatsonServices.IIdentifyLanguageService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "gateway.watsonplatform.net",
          "path": "language-translation/api/v2/identify"
          //"query": ""
        },
        "headers": [
          {
            "Name": "Accept",
            "Accept": "application/json"
          },
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "text/plain"
          }
        ],
        "data": {
          "type": "string" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "languages[0].language"
      }
    },
    {
      "name": "IbmWatsonPersonalityService",
      "classInterface": "IbmWatsonServices.IPersonalityService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "gateway.watsonplatform.net",
          "path": "personality-insights/api/v2/profile"
          //"query": ""
        },
        "headers": [
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json" // charset=utf-8 won't work explicity. It's the implicit default.
          }
        ],
        "data": {
          "type": "string" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "IbmWatsonSpeechToTextService",
      "classInterface": "IbmWatsonServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "stream.watsonplatform.net",
          "path": "speech-to-text/api/v1/recognize",
          "query": "timestamps=true&word_alternatives_threshold=0.9"
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "audio/wav"
          },
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "results[0].alternatives[0].transcript"
      }
    },
    {
      "name": "IbmWatsonTextToSpeechService",
      "classInterface": "IbmWatsonServices.ITextToSpeechService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "stream.watsonplatform.net",
          "path": "text-to-speech/api/v1/synthesize",
          "query": "voice=en-US_AllisonVoice"
        },
        "headers": [
          {
            "Name": "Accept",
            "Accept": "audio/wav"
          },
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | raw | urlencode
          "value": "{ \"text\":\"{text}\" }" // can also use "text={text}" (text/plain multipart)
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": ""
      }
    },
    {
      "name": "IbmWatsonToneService",
      "classInterface": "IbmWatsonServices.IToneService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "gateway.watsonplatform.net",
          "path": "tone-analyzer/api/v3/tone",
          "query": "version=2016-05-19"
        },
        "headers": [
          {
            "Name": "Content-Type",
            "ContentType": "application/json"
          },
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{\"text\":\"{text}\"}"
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "" // use entire json response as result
      }
    },
    {
      "name": "IbmWatsonTranslateService",
      "classInterface": "IbmWatsonServices.ITranslateService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "gateway.watsonplatform.net",
          "path": "language-translation/api/v2/translate",
          "query": "source={source}&target={target}"
        },
        "headers": [
          {
            "Name": "Accept",
            "Accept": "application/json" // will return text/plain too
          },
          {
            "Name": "Content-Type",
            "ContentType": "application/json" // can use text/plain but must use multipart
          },
          {
            "Name": "BasicAuthentication",
            "BasicAuthentication": {
              "type": "basic", // { basic | bearer | <custom> }
              "username": "",
              "password": ""
            }
          }
        ],
        "data": {
          "type": "json", // { ascii | base64 | binary | json | raw | string | urlencode }
          "value": "{ \"text\":\"{text}\" }", // can also use "text={text}" (text/plain multipart)
          "source": "en", // from
          "target": "es" // to
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "translations[0].translation"
      }
    },
    {
      "name": "WindowsSpeechToTextService", // not a HTTP service
      "classInterface": "WindowsServices.ISpeechToTextService"
    },
    {
      "name": "WindowsTextToSpeechService", // not a HTTP service
      "classInterface": "WindowsServices.ITextToSpeechService"
    },
    {
      "name": "WitSpeechToTextService",
      "classInterface": "WitServices.ISpeechToTextService",
      "request": {
        "method": "post", // { "get" | "post" | <custom> }
        "preferChunkedEncodedRequests": false,
        "uri": {
          "scheme": "https",
          "host": "api.wit.ai",
          "path": "speech",
          "query": "v=20160526"
        },
        "headers": [
          {
            "Name": "BearerAuthentication",
            "BearerAuthentication": {
              "type": "bearer", // { basic | bearer | <custom> }
              "bearer": ""
            }
          },
          {
            "Name": "Content-Type",
            "ContentType": "audio/wav"
          }
        ],
        "data": {
          "type": "binary" // { ascii | base64 | binary | json | raw | string | urlencode }
        }
      },
      "response": {
        "missingResponse": "whatever",
        "jsonPath": "_text"
      }
    }
  ]
}
